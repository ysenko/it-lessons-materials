name: Build Marp Presentations on Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  build-presentations:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Ensures we have at least the previous commit for diffing

      - name: Find Changed Markdown Files in Content Directory
        id: changed-md
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"

          # Ensure base commit exists
          git fetch origin "$BASE_SHA" --depth=1 || true

          # Find changed files only in the content directory
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" -- 'content/*.md' | tr '\n' ' ')
          echo "CHANGED_FILES=${CHANGED_FILES}" >> $GITHUB_ENV
          echo "Detected changed files: ${CHANGED_FILES}"

      - name: Create Temporary Directory
        run: |
          mkdir -p temp_output
          chmod -R 777 temp_output  # Ensure write permissions
          echo "TEMP_DIR=temp_output" >> $GITHUB_ENV

      - name: Convert Markdown to HTML and PDF using Marp CLI
        if: env.CHANGED_FILES != ''
        run: |
          for file in $CHANGED_FILES; do
            RELATIVE_PATH="${file#content/}"
            OUTPUT_DIR="$TEMP_DIR/$(dirname "$RELATIVE_PATH")"
            mkdir -p "$OUTPUT_DIR"
            chmod -R 777 "$OUTPUT_DIR"  # Ensure write permissions

            # Run Marp CLI without specifying a user to avoid permission issues
            docker run --rm -v "$PWD:/workspace" -w /workspace ghcr.io/marp-team/marp-cli --allow-local-files "$file" --output "$OUTPUT_DIR/$(basename "${file%.md}.pptx")"
            docker run --rm -v "$PWD:/workspace" -w /workspace ghcr.io/marp-team/marp-cli --allow-local-files "$file" --output "$OUTPUT_DIR/$(basename "${file%.md}.pdf")"
          done

      - name: Upload Converted Files as Artifact
        if: env.CHANGED_FILES != ''
        uses: actions/upload-artifact@v4
        env:
          ARTIFACT_NAME: converted-presentations-${{ github.event.pull_request.head.sha }}
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: temp_output
